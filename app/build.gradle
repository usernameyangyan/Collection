apply plugin: 'com.android.application'
apply from: 'jacoco.gradle'
apply from : "config.gradle"


def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

android {
    compileSdkVersion app.compileSdkVersion
    defaultConfig {
        applicationId "com.youngmanster.collection"
        minSdkVersion app.minSdkVersion
        targetSdkVersion app.targetSdkVersion
        versionCode app.versionCode
        versionName app.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

//        ndk {
//            //指定ndk需要兼容的ABI(这样其他依赖包里x86,armeabi,arm-v8之类的so会被过滤掉)
//            abiFilters "armeabi", "armeabi-v7a"
//        }


        javaCompileOptions{
            annotationProcessorOptions{
                includeCompileClasspath = true
                arguments = ["mvp_create_package_path": "com.youngmanster.collection",
                             "project_java_path" : file("src/main/java").getAbsolutePath()]
            }
        }
    }

    //签名设置
    signingConfigs {
//        release {
//            storeFile file("")
//            storePassword ""
//            keyAlias ""
//            keyPassword ""
//        }
    }

    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
////            signingConfig signingConfigs.release
//        }
        debug {
//            signingConfig signingConfigs.release
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }


    //修改生成的apk名字及输出文件夹
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //新名字
            def newName
            //时间戳
            def timeNow = getDate()
            if (IS_JENKINS.equals('true')) {
                //Jenkins打包输出到服务器路径
                //AutoBuildTest-v1.0.1-xiaomi-release.apk
                newName = 'jenkins_collection_v' + VERSION_NAME + '_'+timeNow+ '_'+BUILD_TYPE+'.apk'
            } else {
                //本机打包输出在本机路径
                if ('debug'.equals(variant.buildType.name)) {
                    newName = 'collection_v'+VERSION_NAME+ '_'+timeNow+  '_' + variant.buildType.name +'.apk'
                } else {
                    //AutoBuildTest-v1.0.1-xiaomi-release.apk
                    newName = 'collection_v' + VERSION_NAME +'_'+timeNow+ '_' + variant.buildType.name + '.apk'
                }
            }

            outputFileName = newName
        }
    }



    //这个是解决lint报错的代码
    lintOptions {
        abortOnError false
    }

    //过滤jar包里的说明文件，防止重复打包
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    //noinspection GradleCompatible
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation supportDependencies.appCompat
    implementation supportDependencies.cardView
    implementation supportDependencies.design
    implementation thirdDependencies.butterknife
    annotationProcessor thirdDependencies.butterknifeCompiler
    implementation thirdDependencies.multidex
    implementation project(':collectionlibrary')

    implementation 'com.youngman.mvp:mvpprocessor:1.0.0'
    annotationProcessor 'com.youngman.mvp:mvpprocessor:1.0.0'

//    //单元测试
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.3.1'
}
